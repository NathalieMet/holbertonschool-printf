_printf(1) Functions Manual _printf(1)
NAME
    _printf - formatted output conversion
SYNOPSIS
    #include "main.h"
    int _printf(const char *format, ...)
DESCRIPTION
    The _printf function produce output according to
a format as described below.
The _printf function write output to stdout, the standard output stream;
The function write the output under the control of a
format string that specifies how subsequent arguments are converted for output.
Format of the format string
The format string is a character string, beginning and ending in
its initial shift state, if any.  The format string is composed
of zero or more directives: ordinary characters (not %), which
are copied unchanged to the output stream; and conversion
specifications, each of which results in fetching zero or more
subsequent argument.  Each conversion specification is
introduced by the character %, and ends with a conversion
specifier.
 Conversion specifiers
A character that specifies the type of conversion to be applied.
The conversion specifiers and their meanings are:
    d, i   The int argument is converted to signed decimal notation.
    c      the int argument is converted
to an unsigned char, and the resulting character is
written.
    s      the const char * argument is
expected to be a pointer to an array of character type
(pointer to a string).  Characters from the array are
written up to (but not including) a terminating null byte
('\0').
RETURN VALUE
    Upon successful return, this function return the number of
characters printed (excluding the null byte used to end output to
strings).
If an output error is encountered, a negative value is returned.
EXAMPLE
    To print an adress:
    #include "main.h"
    _printf("Adress:\n%s\n%d %s\n%i\n%s\n", name, number, street, postal_code, city);
